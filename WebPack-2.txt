Алгоритм формування Webpack
-------------------------------------------
 
1.npm install  [назва  пакета]
2.Імпорт в webpack.config.js
const HtmlWebpackPlugin = require('html-webpack-plugin');

3.ініціалізація в модулі в плагінах

---------------------------------------
--------------------------------------


plugins: [new HtmlWebpackPlugin({template:'src/index.html'}),
	  new MiniCssExtractPlugin(
		{
                        filename: "style.css",
                }),

		new CleanWebpackPlugin(),

],
---------------------------------------




Початок :
--------------------------------------------------------------------
--------------------------------------------------------------------

npn init -y
npm install webpack webpack-cli --save-dev

-----------------------------------------------------------------------------------------------------------
webpack.config.js
/////////////////////////////////////////////////////

const path = require('path');
const HtmlWebpackPlugin = require('html-webpack-plugin');
const MiniCssExtractPlugin = require("mini-css-extract-plugin");
const { CleanWebpackPlugin } = require('clean-webpack-plugin');

module.exports = {
  mode:"development",
  entry: './src/file.js',
  output: {
    path: path.resolve(__dirname, 'dist'),
    filename: 'my-first-webpack.bundle.js',
  },
stats: 'errors-only',

module: {
        rules:


 [



            {
                test: /\.scss$/i,
                use: 

		[
 			MiniCssExtractPlugin.loader,
			//'style-loader',
			'css-loader',
			'sass-loader'
		],

            },


 	    
            {
                test: /\.js$/,
                exclude: /node_modules/,
                use: ['babel-loader'],
            }


            
 ]

    },



plugins: [new HtmlWebpackPlugin({template:'src/index.html'}),
	  new MiniCssExtractPlugin(
		{
                        filename: "style.css",
                }),

		new CleanWebpackPlugin(),


],



 devServer: {
        port: 7777,
        open: false,
        
         
        
    },
};

/////////////////////////////////////////////////////

--------------------------------------------------------------------------------------------------------
package.json
///////////////////////////////////////////////////////

"scripts": {
    "build": "webpack",
    "dev":"webpack --mode=development",
    "prod":"webpack --mode=production"
  },


///////////////////////////////////////////////////////

--------------------------------------------------------------------------------------------------------------
module-1.js
////////////////////////////////////////////////////////
export default 'module-1';


////////////////////////////////////////////////////////

---------------------------------------------------------------------------------------------------------------
index.js
////////////////////////////////////////////////////////
import name from './module-1';
import './css/common.scss';
import './css/button.scss';



///////////////////////////////////////////////////////

npm run dev



dev server .................................................перезавантажує веб сторінку при кожній зміні коду в конфігурації (автоматичне перезавантаження Webpack)

npm install webpack-dev-server --save-dev


//////////////////////////////

Завантажувачі

/////////////////////////////

css-loader
........................................

npm install --save-dev css-loader ts-loader

npm install --save-dev style-loader


npm install --save-dev babel-loader @babel/core


npm install @babel/preset-env --save-dev



--------------------------------------------------
babel.config.json
//////////////////////////////////////////////////

{
  "presets": ["@babel/preset-env"]
}




//////////////////////////////////////////////////



npm install sass-loader sass -D

-------------------------------------------------------------------------------------------------------------------------  plugin

npm install --save-dev html-webpack-plugin


npm install --save-dev mini-css-extract-plugin

-----------------------------------------------------------------------------------------
common.scss
/////////////////////////////////////

@import'./button.scss';

body {
    background-color: grey;
    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
    color: beige;
    
}
/////////////////////////////////////////////////

-----------------------------------------------------------------------------------------
button.scss
////////////////////////////////////////////////

button{
    background-color: red;
}
////////////////////////////////////////////////


npm install --save-dev clean-webpack-plugin





https://www.youtube.com/watch?v=OhlvXOzGOTI
01:17:03














